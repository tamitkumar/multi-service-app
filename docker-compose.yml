version: "3.8"

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - user-service
      - order-service
      - payment-service
    networks:
      - app-network

#  mysql:
#    image: mysql:8
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: multi_service_db
#    ports:
#      - "3306:3306"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network

#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#    ports:
#      - "2181:2181"
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    ports:
#      - "9092:9092"

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  user-service:
    build: ./user-service
    deploy:
      replicas: 2
    depends_on:
#      - mysql
#      - kafka
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - app-network

  order-service:
    build: ./order-service
    deploy:
      replicas: 2
    depends_on:
#      - mysql
#      - kafka
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - app-network

  payment-service:
    build: ./payment-service
    deploy:
      replicas: 2
    depends_on:
#      - mysql
      - rabbitmq
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
